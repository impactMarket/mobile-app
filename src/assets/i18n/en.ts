export default {
    testnetWarning:
        "A friendly reminder you're using the Alfajores network build - the balances are not real.",
    pendingApprovalMessage:
        'This community is being reviewed. If you have any question please contact us at',
    pendingApproval: 'Pending Approval',
    fullDashboard: 'Full Dashboard',
    editCommunityDetails: 'Edit community details',
    viewAsPublic: 'View as public',
    share: 'Share',
    beneficiaries: 'Beneficiaries',
    backers: 'Backers',
    added: 'Added',
    removed: 'Removed',
    addBeneficiary: 'Add Beneficiary',
    add: 'Add',
    cancel: 'Cancel',
    claimed: 'Claimed',
    raised: 'Raised',
    claim: 'Claim',
    manage: 'Manage',
    communities: 'Communities',
    pay: 'Send',
    wallet: 'Wallet',
    profile: 'Profile',
    balance: 'Balance',
    name: 'Name',
    currency: 'Currency',
    country: 'Country',
    phoneNumber: 'Phone Number',
    logout: 'Logout',
    recentTransactions: 'Recent Transactions',
    nameAddressPhone: 'Destinatary address',
    nameAddressPhoneNotFound: 'Address not found.',
    noteOptional: 'Note (optional)',
    recent: 'Recent destinataries',
    remove: 'Remove',
    beneficiaryAddress: 'Beneficiary Account No (address)',
    useText: 'Use Text',
    useCamera: 'Use Camera',
    tapToScanAgain: 'Tap to Scan Again',
    currentAddress: 'Current Address',
    allowCamera: 'Allow camera',
    moreAboutYourCommunity: 'About my community',
    ssi: 'Self-Sustainability Index',
    ssiDescription:
        'SSI measures how financially sustainable a community is, and its progress.',
    seeMore: 'See More',
    seeLess: 'See Less',
    exploreCommunityContract: 'See Community Contract',
    edit: 'Edit',
    create: 'Create',
    submit: 'Submit',
    needLoginToCreateCommunity:
        'You need to connect with Valora to create a community.',
    communityDetails: 'Community Details',
    createCommunityDescription:
        'By creating a new community, you are initiating a new basic income mechanism for your community where each beneficiary you add will have equal access to claim a recurring amount defined by you in this form.',
    selectCoverImage: 'Select Cover Image',
    changeCoverImage: 'Change Cover Image',
    communityName: 'Community Name',
    shortDescription: 'Short Description',
    city: 'City',
    getGPSLocation: 'Get GPS Location',
    validCoordinates: 'Valid Coordinates',
    email: 'Email',
    contractDetails: 'Contract Details',
    claimAmount: 'Claim Amount',
    aroundValue: '~ {{amount}}',
    totalClaimPerBeneficiary: 'Total claim amount per beneficiary',
    frequency: 'Frequency',
    hourly: 'Hourly',
    daily: 'Daily',
    weekly: 'Weekly',
    timeIncrementAfterClaim: 'Time increment after each claim',
    timeInMinutes: 'Time in minutes',
    visibility: 'Visibility',
    public: 'Public',
    private: 'Private',
    createCommunityNote1:
        "Note: These parameters should be a minimum basic income that is sufficient to meet your beneficiaries' basic needs. They can claim while there are funds available in the contract. You will have the responsibility to promote your community and to raise funds for it.",
    createCommunityNote2:
        'If there is another person or organization among your community you believe is more suitable to drive this initiative, let them know about this possibility and encourage them to create a community.',
    failure: 'Failure',
    success: 'Success',
    requestNewCommunityPlaced:
        'Your request to create a new community was placed!',
    claimBiggerThanMax:
        'Claim Amount should not be bigger than Total claim amount per beneficiary!',
    claimNotZero: 'Claim Amount should not be zero!',
    maxNotZero: 'Total claim amount should not be zero!',
    communityUpdated: 'Your community was updated!',
    errorUpdatingCommunity: 'An error happened while updating your community!',
    errorCreatingCommunity:
        'An error happened while placing the request to create a community!',
    anErroHappenedTryAgain: 'An error happened, please, try again.',
    toContinuePlease: 'To continue please',
    loginDescription:
        'impactMarket operates on top of Celo network, an open and global financial platform.\n\nWith Valora you can easily send and receive money.',
    step1: 'Step 1',
    step2: 'Step 2',
    installAndCreateValoraAccount: 'Install and create Valora Account',
    connectWithValora: 'Connect with Valora',
    notNow: 'Not now',
    beforeMovingInsertPin: 'Before moving any further, please, insert your PIN', // pin is for moving dude!
    pin4Digits: 'PIN (4 digits)',
    continue: 'Continue',
    yourQRCode: 'Your QR Code',
    youHaveDonated: 'Thank you for your donation!',
    errorDonating: 'An error happened while donating!',
    addressCopiedClipboard:
        'Community address copied to clipboard! Send only $cUSD (Celo Dollar) to this contract',
    donate: 'Donate',
    donateWithValora: 'Donate with Valora',
    amountSymbol: 'Amount ({{symbol}})',
    donateSymbol: 'Donate ({{symbol}})',
    close: 'Close',
    youCanClaimXin: 'You can claim {{amount}} in',
    claimX: 'Claim ', // {{amount}}
    loading: 'Loading...',
    youHaveClaimedXoutOfY: 'You have claimed ${{claimed}} out of ${{max}}',
    hour: 'hour',
    day: 'day',
    week: 'week',
    changePhoto: 'Change Photo',
    tryingToAddInvalidAddress: 'You are trying to add an invalid address!',
    errorSendingPayment: 'An error happened while sending the payment!',
    paymentSent: 'Payment done!',
    scanningInvalidAddress: 'You are trying to scan an invalid address!',
    select: 'Select',
    errorGettingGPSLocation:
        'An error happened while getting the GPS location.',
    errorWhileLoadingRestart:
        'An error happened while loading. Please restart the app.',
    beneficiaryWasRemoved: '{{beneficiary}} was successfully removed!',
    errorRemovingBeneficiary:
        'An error happened while removing the beneficiary.',
    addedNewBeneficiary: "You've successfully added a new beneficiary!",
    addingInvalidAddress: 'You are trying to add an invalid address!',
    errorAddingBeneficiary: 'An error happened while adding the beneficiary.',
    oneTimeWelcomeMessage1:
        'impactMarket enables any community to setup its own Unconditional Basic Income for their beneficiaries. Anyone can back those communities by donating directly to their UBI contracts.',
    exploreCommunities: 'Explore Communities',
    noFunds: 'No Funds',
    notFundsToAddBeneficiary:
        'Your community does not has enough funds! You need at least $0.05 cUSD in the contract to add a beneficiary.',
    claimExplained1:
        'Each community has a group of beneficiaries, added by the coommunity managers, that can access a basic income under a set of rules. For example, each beneficiary can claim $1/day up to $500.',
    claimExplained2:
        'There is a minimum time you have to wait before being able to claim again, but there is no maximum. You should only claim when you need those funds. The more you claim, the more time you have to wait to claim again.',
    claimAmountHelp:
        'This is the UBI amount, in $cUSD, that each beneficiary will be able to claim each time from this community contract. For example, each beneficiary can claim $2 from the contract on a regular basis, while there are funds available.',
    totalClaimPerBeneficiaryHelp:
        'This value is the limit each beneficiary can get in total after several claims. For example, each beneficiary can claim $2/day until it reaches a total of $1,000, meaning that each beneficiary will have access to a UBI ($2/day) for at least 16 months. This time can increase if minutes are added to the Time increment.',
    frequencyHelp:
        'Each beneficiary will be able to access a basic income on a regular basis, that can be daily or weekly. For example, if daily, each beneficiary will have to wait at least 1 day (24h) before being able to claim again (more $2).',
    timeIncrementAfterClaimHelp:
        'It is possible to add a time increment each time a beneficiary claims. For example, in a community where each beneficiary can claim $2/day, 20 minutes can be added to the time that that beneficiary will have to wait before being able to claim again (in this case, 24h20m after claiming for the 2nd time, 24h40m after the 3rd time, and so on). This benefits those who claimed less and incentivizes self-sustainability progress.',
    visibilityHelp:
        'A community can be public (need our approval to be listed on the app), or private where anyone can create its own UBI and will not show up on the communities list.',
    currencyHelp: 'Choose the currency used among the beneficiaries.',
    coverImageRequired: 'Cover image is required!',
    communityNameRequired: 'Comunity name is required!',
    communityDescriptionRequired: 'Comunity description is required!',
    cityRequired: 'City is required!',
    countryRequired: 'Country is required!',
    enablingGPSRequired: 'Enabling GPS is required!',
    emailRequired: 'Email address is invalid!',
    claimAmountRequired: 'Claim amount is required!',
    maxClaimAmountRequired: 'Max claim amount is required!',
    incrementalIntervalRequired: 'Incremental interval is required!',
    turnOn: 'Turn On',
    turnOnLocationHint: 'Turn on your location for a better experience.',
    tryAgain: 'Try Again',
    payConfirmMessage:
        "By pressing 'Send', you will send {{symbol}}{{amount}} (${{amountInDollars}} cUSD) to {{to}}",
    donateConfirmMessage:
        "By pressing 'Donate', you will donate {{symbol}}{{amount}} (${{amountInDollars}} cUSD) to {{to}}",
    yourDonationWillBackFor:
        'It will back {{backNBeneficiaries}} beneficiaries for {{backForDays}}+ days.',
    eachBeneficiaryCanClaimXUpToY:
        'Each beneficiary can claim ~{{claimXCCurrency}} ($<bold>{{claimX}}</bold> cUSD) per <bold>{{interval}}</bold>, up till $<bold>{{upToY}}</bold> cUSD. Each claim adds <bold>{{minIncrement}}</bold> min to its waiting interval.',
    nextTimeWillWaitClaim:
        'Next time you will have to wait at least {{nextWait}}. <a>How claims work.</a>',
    howClaimWorks: 'How claims work.',
    copyContractAddress: 'Copy Contract Address',
    donationBiggerThanBalance:
        'You are trying to donate an amount bigger than your balance. Add funds on your Valora app.',
    errorClaiming: 'An error happened while claiming. Error: {{error}}',
    consentAnonymousAnalytics: 'Consent Anonymous Analytics',
    youCreatedPrivateCommunity: "You've created a private community. Welcome!",
    youAreNotConnected:
        'You are not connected to your Valora. Connect to send directly.',
    errorConnectToValora:
        'An error happened while connecting to Valora. Please, try again.',
    addingYourOwnAddress:
        'You are trying to add your own address. Are you sure?',
    alreadyInCommunity:
        'You are trying to add an address that already is in this community!',
    requestingPermission: 'Questing Permission',
    requestCameraPermission:
        'impactMarket requires permission to use your camera in order to scan the QR code.',
    claimedSince: '{{amount}} claimed since {{date}}',
    language: 'Language',
    update: 'Update',
    skip: 'Skip',
    newVersionAvailable: 'New version available',
    newVersionAvailableMessage:
        'To get the latest improvements and features we need you to update to the latest version.',
    amountShouldBe: 'Amount should be ${{claimAmount}}+ to calculate..',
    offline: 'The Internet connection appears to be offline',
    openClockSettings: 'Open Clock Settings',
    dismiss: 'Dismiss',
    incorrectTime: 'Incorrect Time',
    incorrectTimeMessage:
        'We have detected that your device may have the time incorrectly set. Please open the clock settings to match {{serverTime}}. Your time is currently {{userTime}}.',
    possibleNetworkIssues: 'Possible network issues.',
    transactionPossiblyNotAllowed: 'Transaction possibly not allowed.',
    networkConnectionLost: 'The network connection was lost.',
    networkIssuesRPC: 'Possible network issues related to RPC.',
    backWithSymbol: '< Back',
    age: 'Age',
    gender: 'Gender',
    male: 'Male',
    female: 'Female',
    others: 'Others',
    howManyChilds: 'How many childs do you have?',
    addedNewManager: "You've successfully added a new manager!",
    errorAddingManager: 'An error happened while adding the manager.',
    managerAddress: 'Manager Account No (address)',
    addManager: 'Add Manager',
    managers: 'Managers',
};
